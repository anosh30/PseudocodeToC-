# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tZo3yNE_Q5HHdZl836vYqHAsT2wc3FQa
"""

import streamlit as st
import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration
import os

# Load the trained model and tokenizer
MODEL_PATH = "trained_transformer"
if os.path.exists(MODEL_PATH):
    st.write("✅ Model found. Loading...")
    tokenizer = T5Tokenizer.from_pretrained(MODEL_PATH)
    model = T5ForConditionalGeneration.from_pretrained(MODEL_PATH)
    model.eval()
else:
    st.write("❌ Model not found! Please upload the trained model.")
    st.stop()

def generate_cpp_code(pseudocode):
    inputs = tokenizer("translate pseudocode to C++: " + pseudocode, return_tensors="pt", padding="max_length", truncation=True, max_length=256)
    with torch.no_grad():
        outputs = model.generate(input_ids=inputs["input_ids"], attention_mask=inputs["attention_mask"], max_length=256)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# Streamlit UI
st.title("Pseudocode to C++ Code Generator")
st.write("Enter pseudocode below, and click 'Generate Code' to convert it into C++.")

user_input = st.text_area("Enter Pseudocode:")
if st.button("Generate Code"):
    if user_input.strip():
        generated_code = generate_cpp_code(user_input)
        st.subheader("Generated C++ Code:")
        st.code(generated_code, language='cpp')
    else:
        st.warning("⚠️ Please enter some pseudocode before generating.")